---
import fetchApi from '../lib/strapi';
import type Evento from '../interfaces/evento'; 
import { Image } from "astro:assets";
const eventos = await fetchApi<Evento[]>({
   endpoint: 'eventos?populate=poster', // el tipo de contenido a obtener
   wrappedByKey: 'data', // la clave para descomponer la respuesta
});

let fechaActual = new Date().getTime();


const {avoidShowOutdated = false} = Astro.props;

const eventosFiltered = eventos.filter((evento)=>
  (new Date(evento.attributes.fechaEvento).getTime() > fechaActual * avoidShowOutdated)
);
const imageList = eventosFiltered.map((evento) =>{ return {poster: `${import.meta.env.STRAPI_URL}`+ evento.attributes.poster.data.attributes.formats.small.url,
                                                          date: evento.attributes.fechaEvento}});
const imageListJson = JSON.stringify(imageList);
const options = {
  weekday: "long",
  year: "numeric",
  month: "long",
  day: "numeric",
};
---

<eventico-loco data-message={imageListJson}>
</eventico-loco>
<div>
  <a id ="linkImagen" href={imageList[0].poster} >
    <img id="imageSrc" alt="poster" src={imageList[0].poster}>
  </a>
  <span id = "eventoFecha">
    {
      new Date(eventos[0].attributes.fechaEvento).toLocaleString('es-US',{
        weekday: "long",
        year: "numeric",
        month: "long",
        day: "numeric",
      })
      }
  </span>
  <div class="arrowContainer" id = arrowContainerjs>
    <button id = "antEvento"type="button">{'<'}</button>
    <button id= "sigEvento"type="button">{'>'}</button>
  </div>
</div>


  <script>

      class Eventos extends HTMLElement {   
      constructor() {
      super();
      document.addEventListener('DOMContentLoaded', () => {
        const next = document.getElementById("sigEvento");
        const prev = document.getElementById("antEvento");
        const container = document.getElementById('arrowContainerjs');
        const linkImagen = document.getElementById('linkImagen');
        const imageSrc = document.getElementById('imageSrc');
        const eventoFecha = document.getElementById('eventoFecha');
        let sumador = 0;
        const imageLista = JSON.parse(this.dataset.message);
        
        container.addEventListener('click', (e) => {
        if(e.target === next){
          if(sumador >= imageLista.length-1){
            sumador = 0;
          }else{
            sumador++;
          }

        }
        else if(e.target === prev){
          if(sumador <= 0){
            sumador = imageLista.length-1;
          }else{
            sumador--;

          }
        }
        console.log(imageLista[sumador]);
        linkImagen.setAttribute('href', imageLista[sumador].poster);
        imageSrc.setAttribute('src', imageLista[sumador].poster);
        
      const fecha = new Date(imageLista[sumador].date).toLocaleString('es-US',{
        weekday: "long",
        year: "numeric",
        month: "long",
        day: "numeric",
      })
    
        eventoFecha.innerText= fecha;
      })
      })
    }
}

  customElements.define('eventico-loco', Eventos);

</script>

  
<style>
  div{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    & > a{
    
    width: min(100%, 320px);
    height: 364px;
    border: 1px dotted var(--accent-color);
    overflow: hidden;
      & > img{
        object-fit: cover;
      }
    }
    & > span#eventoFecha{
      color: var(--secondary-color);
      text-align: center;
    }
  }
  #sigEvento, #antEvento{
    color: var(--primary-color);
    font-weight: 900;
    margin: 1rem 0;
    font-size: larger;
    border: 1px solid black;
    background-color:var(--accent-color);
    padding: 0.125rem 1rem;
    border-radius: 0.25rem;
    &:hover{
      background-color: var(--secondary-color);
    }
  }
  .arrowContainer{
    display: flex;
    flex-direction: row;
    width: auto;
    align-items: center;
    justify-content: space-evenly;
    margin-bottom: 0.5rem;
  }
  section{
    background-color: var(--secondary-color);
  }
</style>